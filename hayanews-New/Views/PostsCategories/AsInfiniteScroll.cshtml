@using Comman.Enums
@using Comman.Helpers
@using Resources.App_GlobalResources
@using Utility.HtmlHelpers
@using WebDesign.Domain
@using WebDesign.UI.Tools
@using Models
@using WebDesign.UI.Framework.SharedObjects
@using WebDesign.UI.Framework.Utilities
@model  PostCategoryInfiniteScrollListModel

@{
    Layout = "../shared/_Layout.cshtml";
}
@section cssTop    {
    <!-- Bootstrap -->
    <link href="/GlobalItems/fonts/materialFontIcon/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="/themes/hayanews/static/css/bootstrap.min.css" rel="stylesheet">
    <link href="/themes/hayanews/static/css/style.css" rel="stylesheet">
    <link href="/themes/hayanews/static/css/otherpage.css" rel="stylesheet">
    <!-- menu-resize -->
    <link rel="stylesheet" type="text/css" href="/themes/hayanews/static/css/menuResize/menuResize.css" media="all" />
    <link rel="stylesheet" type="text/css" href="/themes/hayanews/static/css/menu/menu.css" media="all" />
    <!--carousel-->
    <link rel="stylesheet" type="text/css" href="/themes/hayanews/static/css/carousel/owl.carousel.css" media="all" />
    <link rel="stylesheet" type="text/css" href="/themes/hayanews/static/css/carousel/owl.theme.css" media="all" />
    <!-- form-material-->
    <link type="text/css" rel="stylesheet" href="/GlobalItems/form-material/style/form-material.css" media="all" />
}
@{

    var route = @Request.Url.ToString().Split('/');

    var pageNum = double.Parse(ViewContext.RouteData.Values["pagenumber"].ToString());
    var pageSize = double.Parse(ViewContext.RouteData.Values["itemsperpage"].ToString());
    var totalRecords = double.Parse(TempData["TotalScrollItemsCount"].ToString());
    var pagesCount = Math.Ceiling(totalRecords / pageSize);
    var pagesCountToDisplay = 7;

}
@section jsBottom    {
    <!-- start script -->
    <script type="text/javascript" src="/themes/hayanews/static/js/jquery.min.js"></script>

    <script type="text/javascript" src="/themes/hayanews/static/js/bootstrap.min.js"></script>
    <!-- ripplink -->
    <script src="/themes/hayanews/static/js/ripplink.js"></script>
    <!-- menu -->
    <script src="/themes/hayanews/static/js/menu/bootstrap-dropdownhover.js"></script>
    <!-- custom -->
    <script src="/themes/hayanews/static/js/custom.js"></script>
    <!--backToTop-->
    <script src="/themes/hayanews/static/js/backToTop/backToTop.js"></script>
    <!-- material-->
    <script type="text/javascript" src="/GlobalItems/form-material/style/form-material.js"></script>
    <script type="text/javascript" src="@Url.RouteUrl("HomeEnRout", new
                                        {
                                            Controller = "home",
                                            Action = "infiniteScroll",
                                            moreRowsUrl = TempData["moreRowsUrl"],
                                            endOfRecordsCheckUrl = TempData["endOfRecordsCheckUrl"],
                                            pageNum = ViewContext.RouteData.Values["pagenumber"],
                                            pageSize = ViewContext.RouteData.Values["itemsperpage"],
                                            totalItems = TempData["TotalScrollItemsCount"],
                                            category1 = TempData["category1"],
                                            category2 = TempData["category2"],
                                            category3 = TempData["category3"],
                                            pagesCountToDisplay = pagesCountToDisplay,

                                        })"></script>
    @{ Html.RenderPartial(Url.Content("/Themes/Views/SharedItems/_PostCategoryInfiniteScrollPagingDropdownConfigPartial.cshtml"), new ViewDataDictionary { { "PagingType", "InfiniteScroll" } });}
}

@{
    var type = PostsType.Article;
}
@{
    if (Request.RequestContext.RouteData.Values["type"].ToString() == PostsType.News.ToString())
    {


        type = PostsType.News;
    }
    else
    {
        type = PostsType.Article;
    }
}
@section Paging {
    <link rel="canonical" href="@UrlTools.GetPostCategoryLocalizedInfiniteScrollPagginglUrl((int?)pageNum, (int?)pageSize,type)" />
    @if ((pageNum + 1) <= pagesCount)
    {
        <link rel="next" href="@UrlTools.GetPostCategoryLocalizedInfiniteScrollPagginglUrl((int?)(pageNum + 1), (int?)pageSize,type)" />
    }
    @if (pageNum - 1 > 0)
    {
        <link rel="prev" href="@UrlTools.GetPostCategoryLocalizedInfiniteScrollPagginglUrl((int?)(pageNum - 1), (int?)pageSize,type)" />
    }
}

@section Banner
{
    @Html.Action("GetAllSlidesByDisplayOrder", "SlidesLocalized")
}
<section class="Breadcrumbs">
    <div class="container">
        <div class="bread-crumb">
            @{
                var postsCategoriesLocalize = new PostsCategoriesLocalized();
                var data = TempData["ScrollItems"] as PostCategoryInfiniteScrollListModel;
                if (data != null && data.PostCategoryLocalizeds.Any())
                {
                    postsCategoriesLocalize = data.PostCategoryLocalizeds.FirstOrDefault();
                }
            }
            @Html.Action("GetPostBreadCrumb", "PostsCategories", new { postsCategoriesLocalized = postsCategoriesLocalize, partialName = "/Themes/hayanews/views/shared/_PostCategoryBreadCrumbPartial.cshtml" })

        </div>
    </div>
</section>
<section class="Categories">
    <div class="container">
        <h3 class="titr bullet">
            @if (Request.RequestContext.RouteData.Values["type"].ToString() == PostsType.News.ToString())
            {
                CustomRoutItemsTools.GetCustomName(RoutItemEntityName.News, () => Resource.News, () => Resource.Category);
            }
            else
            {
                CustomRoutItemsTools.GetCustomName(RoutItemEntityName.Aricles, () => Resource.Articles, () => Resource.Category);
            }
        </h3>
        <div class="row">
            @{var pageNumber = 1;
                if (TempData["PageNumber"] != null)
                {
                    pageNumber = (int)TempData["PageNumber"];
                }
            }
            @Html.Partial("_PostCategoryAsInfiniteScroll", TempData["ScrollItems"] as PostCategoryInfiniteScrollListModel)

            @*@{
                if (Model == null)
                {
                    return;
                }
                foreach (var news in Model.PostCategoryLocalizeds.ToList())
                {
                    var currentLang = SharedObjectResolver.Configs.CurrentRequestCulture;
                    var localized = news.PostsCategories.PostsCategoriesLocalized.FirstOrDefault(x => x.Languages.LanguagesCodes.Code == currentLang);
                    if (localized != null)
                    {
                        //var detailUrl = UrlTools.GetUrlOfCategoryPost(news.PostsCategories.PostsCategoriesLocalized.FirstOrDefault(),news.PostsCategories.PostsCategoriesLocalized.FirstOrDefault().Title, null, PagingType.InfiniteScroll,30);
                        //var detailUrl = UrlTools.GetUrlOfCategoryPost(localized);
                        var urlOfCategory = UrlTools.GetUrlOfCategoryPost(news.PostsCategories.PostsCategoriesLocalized.FirstOrDefault());
                        var path = Html.Imagehelper(news.PostsCategories.Image);
                        <div class="col-md-6 col-sm-6 col-xs-12 item" onclick="window.location.href = '@urlOfCategory'">
                            <img src="@path" title="" alt="">
                            <a class="item1" href="@urlOfCategory"><h4 class="titr">@news.Title</h4></a>
                        </div>
                    }
                }
            }*@
        </div>
    </div>
</section>

